import datetime
import boto3
import time
import json
import env

def format_date(o):
    if isinstance(o, (datetime.date, datetime.datetime)):
        return o.isoformat()

def lambda_handler(event, context):

    db = boto3.resource("dynamodb")
    table = db.Table(env.table_name)
    count = 0
    
    for record in event['Records']:
        count+=1
        message_body = json.loads(record["body"])
        # get relevant data from response message
        # id - uuid generated by send function
        id = message_body["MessageAttributes"]["transaction_id"]["Value"]
        # function_send_time
        function_send_time = message_body["MessageAttributes"]["sent_time"]["Value"]
        # queue_receive_time
        queue_receive_time = message_body["Timestamp"]
        # function_receive_time
        function_receive_time = datetime.datetime.utcnow().isoformat()
        # message
        message = message_body["Message"]
        
        # print("id: %s" % str(id))
        # print("function_send_time: %s" % str(function_send_time))
        # print("queue_receive_time: %s" % str(queue_receive_time))
        # print("function_receive_time: %s" % str(function_receive_time))
        # print("message: %s" % str(message))
        
        response = table.put_item(
            Item={
                "id": str(id),
                "function_send_time": str(function_send_time),
                "queue_receive_time": str(queue_receive_time),
                "function_receive_time": str(function_receive_time),
                "message": str(message)
            })
    
    print("Messages processed %s" % str(count))                
    return {"statusCode": 200}