import datetime
import boto3
import time
import json
import env

def format_date(o):
    if isinstance(o, (datetime.date, datetime.datetime)):
        return o.isoformat()

def lambda_handler(event, context):
    
    for record in event['Records']:
        # get relevant data from response message
        #id - uuid generated by send function
        id = record["Sns"]["MessageAttributes"]["transaction_id"]["Value"]
        #function_send_time
        function_send_time = record["Sns"]["MessageAttributes"]["sent_time"]["Value"]
        #queue_receive_time
        queue_receive_time = record["Sns"]["Timestamp"]
        #function_receive_time
        function_receive_time = datetime.datetime.utcnow().isoformat()
        #message
        message = record["Sns"]["Message"]
        
        # print("order: %s" % str(order))
        # print("function_send_time: %s" % str(function_send_time))
        # print("queue_receive_time: %s" % str(queue_receive_time))
        # print("function_receive_time: %s" % str(function_receive_time))
        # print("message: %s" % str(message))
        db = boto3.resource("dynamodb")
        table = db.Table(env.table_name)
        
        try:
            response = table.put_item(
                Item={
                    "id": str(id),
                    "function_send_time": str(function_send_time),
                    "queue_receive_time": str(queue_receive_time),
                    "function_receive_time": str(function_receive_time),
                    "message": str(message)
                })
        except:
            time.sleep(1)
            response = table.put_item(
                Item={
                    "id": str(id),
                    "function_send_time": str(function_send_time),
                    "queue_receive_time": str(queue_receive_time),
                    "function_receive_time": str(function_receive_time),
                    "message": str(message)
                })
                
    return {
        "statusCode": 200,
        "body": json.dumps("done")
    }